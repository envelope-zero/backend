// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "Entrypoint for the API, listing all endpoints",
                "tags": [
                    "General"
                ],
                "summary": "API root",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.RootResponse"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs",
                "tags": [
                    "General"
                ],
                "summary": "Allowed HTTP verbs",
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/v1": {
            "get": {
                "description": "Returns general information about the v1 API",
                "tags": [
                    "General"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.V1Response"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs",
                "tags": [
                    "General"
                ],
                "summary": "Allowed HTTP verbs",
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/v1/budgets": {
            "get": {
                "description": "Returns list of budgets",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budgets"
                ],
                "summary": "List all budgets",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.BudgetListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new budget",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budgets"
                ],
                "summary": "Create a budget",
                "parameters": [
                    {
                        "description": "Budget",
                        "name": "budget",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BudgetCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controllers.BudgetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs",
                "tags": [
                    "Budgets"
                ],
                "summary": "Allowed HTTP verbs",
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/budgets/{budgetId}": {
            "get": {
                "description": "Returns a specific budget",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budgets"
                ],
                "summary": "Get a budget",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.BudgetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an existing budget",
                "tags": [
                    "Budgets"
                ],
                "summary": "Delete a budget",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs",
                "tags": [
                    "Budgets"
                ],
                "summary": "Allowed HTTP verbs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update an existing budget. Only values to be updated need to be specified.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budgets"
                ],
                "summary": "Update a budget",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Budget",
                        "name": "budget",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BudgetCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.BudgetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/budgets/{budgetId}/accounts": {
            "get": {
                "description": "Returns a list of all accounts for the budget",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "List accounts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.AccountListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new account for a specific budget",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Create account",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Account",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AccountCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controllers.AccountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs",
                "tags": [
                    "Accounts"
                ],
                "summary": "Allowed HTTP verbs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    }
                }
            }
        },
        "/v1/budgets/{budgetId}/accounts/{accountId}": {
            "get": {
                "description": "Returns a specific account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Get account",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the account",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.AccountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the specified account.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Delete account",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the account",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs",
                "tags": [
                    "Accounts"
                ],
                "summary": "Allowed HTTP verbs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the account",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    }
                }
            },
            "patch": {
                "description": "Updates an account. Only values to be updated need to be specified.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Update account",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the account",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Account",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AccountCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.AccountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/budgets/{budgetId}/accounts/{accountId}/transactions": {
            "get": {
                "description": "Returns a list of all transactions for the account requested",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "List all transactions for an account",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the account",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.TransactionListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs",
                "tags": [
                    "Accounts"
                ],
                "summary": "Allowed HTTP verbs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the account",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    }
                }
            }
        },
        "/v1/budgets/{budgetId}/categories": {
            "get": {
                "description": "Returns the full list of all categories for a specific budget",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get all categories for a budget",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.CategoryListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new category for a specific budget",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Create category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Category",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CategoryCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controllers.CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs",
                "tags": [
                    "Categories"
                ],
                "summary": "Allowed HTTP verbs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    }
                }
            }
        },
        "/v1/budgets/{budgetId}/categories/{categoryId}": {
            "get": {
                "description": "Returns a category by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the category",
                        "name": "categoryId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an existing category",
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the category",
                        "name": "categoryId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs",
                "tags": [
                    "Categories"
                ],
                "summary": "Allowed HTTP verbs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the category",
                        "name": "categoryId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    }
                }
            },
            "patch": {
                "description": "Update an existing category. Only values to be updated need to be specified.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Update a category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the category",
                        "name": "categoryId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Category",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CategoryCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/budgets/{budgetId}/categories/{categoryId}/envelopes": {
            "get": {
                "description": "Returns the full list of all envelopes for a specific category",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Envelopes"
                ],
                "summary": "Get all envelopes for a category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the category",
                        "name": "categoryId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.EnvelopeListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new envelope for a specific category",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Envelopes"
                ],
                "summary": "Create envelope",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the category",
                        "name": "categoryId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Envelope",
                        "name": "envelope",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EnvelopeCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controllers.EnvelopeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs",
                "tags": [
                    "Envelopes"
                ],
                "summary": "Allowed HTTP verbs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the category",
                        "name": "categoryId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/v1/budgets/{budgetId}/categories/{categoryId}/envelopes/{envelopeId}": {
            "get": {
                "description": "Returns an envelope by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Envelopes"
                ],
                "summary": "Get envelope",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the category",
                        "name": "categoryId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the envelope",
                        "name": "envelopeId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.EnvelopeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an existing envelope",
                "tags": [
                    "Envelopes"
                ],
                "summary": "Delete an envelope",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the category",
                        "name": "categoryId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the envelope",
                        "name": "envelopeId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs",
                "tags": [
                    "Envelopes"
                ],
                "summary": "Allowed HTTP verbs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the category",
                        "name": "categoryId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the envelope",
                        "name": "envelopeId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            },
            "patch": {
                "description": "Update an existing envelope. Only values to be updated need to be specified.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Envelopes"
                ],
                "summary": "Update an envelope",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the category",
                        "name": "categoryId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the envelope",
                        "name": "envelopeId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Envelope",
                        "name": "envelope",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EnvelopeCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.EnvelopeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/budgets/{budgetId}/categories/{categoryId}/envelopes/{envelopeId}/allocations": {
            "get": {
                "description": "Returns all allocations for an envelope",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Allocations"
                ],
                "summary": "Get all allocations for an envelope",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the category",
                        "name": "categoryId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the envelope",
                        "name": "envelopeId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.AllocationListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new allocation of funds to an envelope for a specific month",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Allocations"
                ],
                "summary": "Create allocations",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the category",
                        "name": "categoryId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the envelope",
                        "name": "envelopeId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Allocation",
                        "name": "allocation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AllocationCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controllers.AllocationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs",
                "tags": [
                    "Allocations"
                ],
                "summary": "Allowed HTTP verbs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the category",
                        "name": "categoryId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the envelope",
                        "name": "envelopeId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/v1/budgets/{budgetId}/categories/{categoryId}/envelopes/{envelopeId}/allocations/{allocationId}": {
            "get": {
                "description": "Returns an allocation by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Allocations"
                ],
                "summary": "Get allocation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the category",
                        "name": "categoryId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the envelope",
                        "name": "envelopeId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the allocation",
                        "name": "allocationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.AllocationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an existing allocation",
                "tags": [
                    "Allocations"
                ],
                "summary": "Delete an allocation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the category",
                        "name": "categoryId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the envelope",
                        "name": "envelopeId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the allocation",
                        "name": "allocationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs",
                "tags": [
                    "Allocations"
                ],
                "summary": "Allowed HTTP verbs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the category",
                        "name": "categoryId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the envelope",
                        "name": "envelopeId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the allocation",
                        "name": "allocationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            },
            "patch": {
                "description": "Update an existing allocation. Only values to be updated need to be specified.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Allocations"
                ],
                "summary": "Update an allocation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the category",
                        "name": "categoryId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the envelope",
                        "name": "envelopeId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the allocation",
                        "name": "allocationId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Allocation",
                        "name": "allocation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AllocationCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.AllocationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/budgets/{budgetId}/transactions": {
            "get": {
                "description": "Returns all transactions for a specific budget",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get all transactions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.TransactionListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new transaction for the specified budget",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Create transaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transaction",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TransactionCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controllers.TransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs",
                "tags": [
                    "Transactions"
                ],
                "summary": "Allowed HTTP verbs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/v1/budgets/{budgetId}/transactions/{transactionId}": {
            "get": {
                "description": "Returns a transaction by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get transaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the transaction",
                        "name": "transactionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.TransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an existing transaction",
                "tags": [
                    "Transactions"
                ],
                "summary": "Delete a transaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the transaction",
                        "name": "transactionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs",
                "tags": [
                    "Transactions"
                ],
                "summary": "Allowed HTTP verbs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the transaction",
                        "name": "transactionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            },
            "patch": {
                "description": "Update an existing transaction. Only values to be updated need to be specified.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Update a transaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the budget",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the transaction",
                        "name": "transactionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transaction",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TransactionCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.TransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/version": {
            "get": {
                "description": "Returns the software version of the API",
                "tags": [
                    "General"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.VersionResponse"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs",
                "tags": [
                    "General"
                ],
                "summary": "Allowed HTTP verbs",
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.AccountLinks": {
            "type": "object",
            "properties": {
                "transactions": {
                    "type": "string",
                    "example": "https://example.com/api/v1/budgets/3/accounts/17/transactions"
                }
            }
        },
        "controllers.AccountListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Account"
                    }
                }
            }
        },
        "controllers.AccountResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.Account"
                },
                "links": {
                    "$ref": "#/definitions/controllers.AccountLinks"
                }
            }
        },
        "controllers.AllocationListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Allocation"
                    }
                }
            }
        },
        "controllers.AllocationResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.Allocation"
                }
            }
        },
        "controllers.BudgetLinks": {
            "type": "object",
            "properties": {
                "accounts": {
                    "type": "string",
                    "example": "https://example.com/api/v1/budgets/2/accounts"
                },
                "categories": {
                    "type": "string",
                    "example": "https://example.com/api/v1/budgets/2/categories"
                },
                "month": {
                    "type": "string",
                    "example": "https://example.com/api/v1/budgets/2?month=2022-03"
                },
                "transactions": {
                    "type": "string",
                    "example": "https://example.com/api/v1/budgets/2/transactions"
                }
            }
        },
        "controllers.BudgetListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Budget"
                    }
                }
            }
        },
        "controllers.BudgetResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.Budget"
                },
                "links": {
                    "$ref": "#/definitions/controllers.BudgetLinks"
                }
            }
        },
        "controllers.CategoryLinks": {
            "type": "object",
            "properties": {
                "envelopes": {
                    "type": "string",
                    "example": "https://example.com/api/v1/budgets/5/categories/7/envelopes"
                }
            }
        },
        "controllers.CategoryListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Category"
                    }
                }
            }
        },
        "controllers.CategoryResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.Category"
                },
                "links": {
                    "$ref": "#/definitions/controllers.CategoryLinks"
                }
            }
        },
        "controllers.EnvelopeLinks": {
            "type": "object",
            "properties": {
                "allocations": {
                    "type": "string",
                    "example": "https://example.com/api/v1/budgets/2/categories/5/envelopes/1/allocations"
                },
                "month": {
                    "type": "string",
                    "example": "https://example.com/api/v1/budgets/2/categories/5/envelopes/1?month=2019-03"
                }
            }
        },
        "controllers.EnvelopeListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Envelope"
                    }
                }
            }
        },
        "controllers.EnvelopeResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.Envelope"
                },
                "links": {
                    "$ref": "#/definitions/controllers.EnvelopeLinks"
                }
            }
        },
        "controllers.RootLinks": {
            "type": "object",
            "properties": {
                "docs": {
                    "type": "string",
                    "example": "https://example.com/api/docs/index.html"
                },
                "v1": {
                    "type": "string",
                    "example": "https://example.com/api/v1"
                },
                "version": {
                    "type": "string",
                    "example": "https://example.com/api/version"
                }
            }
        },
        "controllers.RootResponse": {
            "type": "object",
            "properties": {
                "links": {
                    "$ref": "#/definitions/controllers.RootLinks"
                }
            }
        },
        "controllers.TransactionListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Transaction"
                    }
                }
            }
        },
        "controllers.TransactionResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.Transaction"
                }
            }
        },
        "controllers.V1Links": {
            "type": "object",
            "properties": {
                "budgets": {
                    "type": "string",
                    "example": "https://example.com/api/v1"
                }
            }
        },
        "controllers.V1Response": {
            "type": "object",
            "properties": {
                "links": {
                    "$ref": "#/definitions/controllers.V1Links"
                }
            }
        },
        "controllers.VersionObject": {
            "type": "object",
            "properties": {
                "version": {
                    "type": "string",
                    "example": "1.1.0"
                }
            }
        },
        "controllers.VersionResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/controllers.VersionObject"
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "httputil.HTTPError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "An ID specified in the query string was not a valid uint64"
                }
            }
        },
        "models.Account": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "budgetId": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2022-04-02T19:28:44.491514Z"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "external": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "format": "uint64",
                    "example": 42
                },
                "name": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "onBudget": {
                    "description": "Always false when external: true",
                    "type": "boolean"
                },
                "reconciledBalance": {
                    "type": "number"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2022-04-17T20:14:01.048145Z"
                }
            }
        },
        "models.AccountCreate": {
            "type": "object",
            "properties": {
                "budgetId": {
                    "type": "integer"
                },
                "external": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "onBudget": {
                    "description": "Always false when external: true",
                    "type": "boolean"
                }
            }
        },
        "models.Allocation": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2022-04-02T19:28:44.491514Z"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "envelopeId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer",
                    "format": "uint64",
                    "example": 42
                },
                "month": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2022-04-17T20:14:01.048145Z"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "models.AllocationCreate": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "envelopeId": {
                    "type": "integer"
                },
                "month": {
                    "type": "integer"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "models.Budget": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "example": "2022-04-02T19:28:44.491514Z"
                },
                "currency": {
                    "type": "string",
                    "example": "€"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer",
                    "format": "uint64",
                    "example": 42
                },
                "name": {
                    "type": "string",
                    "example": "My First Budget"
                },
                "note": {
                    "type": "string",
                    "example": "A description so I remember what this was for"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2022-04-17T20:14:01.048145Z"
                }
            }
        },
        "models.BudgetCreate": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string",
                    "example": "€"
                },
                "name": {
                    "type": "string",
                    "example": "My First Budget"
                },
                "note": {
                    "type": "string",
                    "example": "A description so I remember what this was for"
                }
            }
        },
        "models.Category": {
            "type": "object",
            "properties": {
                "budgetId": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2022-04-02T19:28:44.491514Z"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer",
                    "format": "uint64",
                    "example": 42
                },
                "name": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2022-04-17T20:14:01.048145Z"
                }
            }
        },
        "models.CategoryCreate": {
            "type": "object",
            "properties": {
                "budgetId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                }
            }
        },
        "models.Envelope": {
            "type": "object",
            "properties": {
                "categoryId": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2022-04-02T19:28:44.491514Z"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer",
                    "format": "uint64",
                    "example": 42
                },
                "name": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2022-04-17T20:14:01.048145Z"
                }
            }
        },
        "models.EnvelopeCreate": {
            "type": "object",
            "properties": {
                "categoryId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                }
            }
        },
        "models.Transaction": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "budgetId": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2022-04-02T19:28:44.491514Z"
                },
                "date": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "destinationAccountId": {
                    "type": "integer"
                },
                "envelopeId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer",
                    "format": "uint64",
                    "example": 42
                },
                "note": {
                    "type": "string"
                },
                "reconciled": {
                    "type": "boolean"
                },
                "sourceAccountId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2022-04-17T20:14:01.048145Z"
                }
            }
        },
        "models.TransactionCreate": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "budgetId": {
                    "type": "integer"
                },
                "date": {
                    "type": "string"
                },
                "destinationAccountId": {
                    "type": "integer"
                },
                "envelopeId": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "reconciled": {
                    "type": "boolean"
                },
                "sourceAccountId": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
