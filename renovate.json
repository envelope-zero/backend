{
  "extends": ["group:monorepos", "group:recommended"],
  "dependencyDashboard": true,
  "pre-commit": {
    "enabled": true
  },
  "labels": ["renovate"],
  "rangeStrategy": "pin",
  "rebaseWhen": "behind-base-branch",
  "semanticCommits": "enabled",
  "platformAutomerge": true,
  "postUpdateOptions": ["gomodTidy"],
  "regexManagers": [
    {
      "description": "Upgrade go version",
      "fileMatch": [
        "(^workflow-templates|\\.github/workflows)/[^/]+\\.ya?ml$",
        "^\\.golangci\\.yml"
      ],
      "matchStrings": [
        "# renovate: go-version\\s*go-version:\\s*\"?(?<currentValue>.*)\"?",
        "lang-version: \"(?<currentValue>.*)\""
      ],
      "datasourceTemplate": "golang-version",
      "depNameTemplate": "go"
    },
    {
      "description": "Upgrade arbitrary go module versions in Makefiles",
      "fileMatch": ["^Makefile"],
      "matchStrings": [
        "# renovate:\\sdatasource=(?<datasource>.*?)\\sdepName=(?<depName>.*?)\\s.*@(?<currentValue>.*)"
      ]
    }
  ],
  "packageRules": [
    {
      "description": "The golang CI language version only uses major.minor",
      "matchFiles": [".golangci.yml"],
      "matchPackageNames": ["go"],
      "groupName": "go"
    },
    {
      "description": "Automatically merge minor updates for GitHub actions and go dependencies",
      "matchManagers": ["github-actions", "gomod"],
      "matchUpdateTypes": ["minor", "patch"],
      "automerge": true
    },
    {
      "description": "Group go upgrades",
      "matchPackageNames": ["go", "golang"],
      "groupName": "go",
      "prHeader": ":warning: Only upgrade the go version once the matching swagger version has been released. Check [the Makefile](https://github.com/envelope-zero/backend/blob/main/Makefile) for the current swagger version. Rule: swagger 1.8.4 -> go 1.18.4. This is needed as swagger needs to be rebuild with the exact go version (or newer) that the code that it generates documentation from has been built with."
    }
  ]
}
