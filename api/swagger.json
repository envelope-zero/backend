{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/": {
            "get": {
                "description": "Entrypoint for the API, listing all endpoints",
                "tags": [
                    "General"
                ],
                "summary": "API root",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/router.RootResponse"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs",
                "tags": [
                    "General"
                ],
                "summary": "Allowed HTTP verbs",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1": {
            "get": {
                "description": "Returns general information about the v1 API",
                "tags": [
                    "v1"
                ],
                "summary": "v1 API",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/router.V1Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Permanently deletes all resources",
                "tags": [
                    "v1"
                ],
                "summary": "Delete everything",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs",
                "tags": [
                    "v1"
                ],
                "summary": "Allowed HTTP verbs",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/accounts": {
            "get": {
                "description": "Returns a list of accounts",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "List accounts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by note",
                        "name": "note",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by budget ID",
                        "name": "budget",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by on/off-budget",
                        "name": "onBudget",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter internal/external",
                        "name": "external",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.AccountListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Create account",
                "parameters": [
                    {
                        "description": "Account",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AccountCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controllers.AccountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs",
                "tags": [
                    "Accounts"
                ],
                "summary": "Allowed HTTP verbs",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/v1/accounts/{accountId}": {
            "get": {
                "description": "Returns a specific account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Get account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID formatted as string",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.AccountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Delete account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID formatted as string",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs",
                "tags": [
                    "Accounts"
                ],
                "summary": "Allowed HTTP verbs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID formatted as string",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "patch": {
                "description": "Updates an account. Only values to be updated need to be specified.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Update account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID formatted as string",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Account",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AccountCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.AccountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/allocations": {
            "get": {
                "description": "Returns a list of allocations",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Allocations"
                ],
                "summary": "Get allocations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by month",
                        "name": "month",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by amount",
                        "name": "amount",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by envelope ID",
                        "name": "envelope",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.AllocationListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new allocation of funds to an envelope for a specific month",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Allocations"
                ],
                "summary": "Create allocations",
                "parameters": [
                    {
                        "description": "Allocation",
                        "name": "allocation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AllocationCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controllers.AllocationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs",
                "tags": [
                    "Allocations"
                ],
                "summary": "Allowed HTTP verbs",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/allocations/{allocationId}": {
            "get": {
                "description": "Returns a specific allocation",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Allocations"
                ],
                "summary": "Get allocation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID formatted as string",
                        "name": "allocationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.AllocationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an allocation",
                "tags": [
                    "Allocations"
                ],
                "summary": "Delete allocation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID formatted as string",
                        "name": "allocationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs",
                "tags": [
                    "Allocations"
                ],
                "summary": "Allowed HTTP verbs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID formatted as string",
                        "name": "allocationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "patch": {
                "description": "Update an allocation. Only values to be updated need to be specified.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Allocations"
                ],
                "summary": "Update allocation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID formatted as string",
                        "name": "allocationId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Allocation",
                        "name": "allocation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AllocationCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.AllocationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/budgets": {
            "get": {
                "description": "Returns a list of budgets",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budgets"
                ],
                "summary": "List budgets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by note",
                        "name": "note",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by currency",
                        "name": "currency",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.BudgetListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new budget",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budgets"
                ],
                "summary": "Create budget",
                "parameters": [
                    {
                        "description": "Budget",
                        "name": "budget",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BudgetCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controllers.BudgetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs",
                "tags": [
                    "Budgets"
                ],
                "summary": "Allowed HTTP verbs",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/budgets/{budgetId}": {
            "get": {
                "description": "Returns a specific budget",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budgets"
                ],
                "summary": "Get budget",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID formatted as string",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.BudgetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a budget",
                "tags": [
                    "Budgets"
                ],
                "summary": "Delete budget",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID formatted as string",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs",
                "tags": [
                    "Budgets"
                ],
                "summary": "Allowed HTTP verbs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID formatted as string",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update an existing budget. Only values to be updated need to be specified.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budgets"
                ],
                "summary": "Update budget",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID formatted as string",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Budget",
                        "name": "budget",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BudgetCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.BudgetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/budgets/{budgetId}/{month}": {
            "get": {
                "description": "Returns data about a budget for a for a specific month. **Use GET /month endpoint with month and budgetId query parameters instead.**",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budgets"
                ],
                "summary": "Get Budget month data",
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID formatted as string",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The month in YYYY-MM format",
                        "name": "month",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.BudgetMonthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs. **Use OPTIONS /month endpoint with month and budgetId query parameters instead.**",
                "tags": [
                    "Budgets"
                ],
                "summary": "Allowed HTTP verbs",
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID formatted as string",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The month in YYYY-MM format",
                        "name": "month",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/budgets/{budgetId}/{month}/allocations": {
            "post": {
                "description": "Sets allocations for a month for all envelopes that do not have an allocation yet. **Use POST /month endpoint with month and budgetId query parameters instead.**",
                "tags": [
                    "Budgets"
                ],
                "summary": "Set allocations for a month",
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "The month in YYYY-MM format",
                        "name": "month",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Budget ID formatted as string",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Budget",
                        "name": "mode",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.BudgetAllocationMode"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes all allocation for the specified month. **Use DELETE /month endpoint with month and budgetId query parameters instead.**",
                "tags": [
                    "Budgets"
                ],
                "summary": "Delete allocations for a month",
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "The month in YYYY-MM format",
                        "name": "month",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Budget ID formatted as string",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs. **Use OPTIONS /month endpoint with month and budgetId query parameters instead.**",
                "tags": [
                    "Budgets"
                ],
                "summary": "Allowed HTTP verbs",
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID formatted as string",
                        "name": "budgetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The month in YYYY-MM format",
                        "name": "month",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/categories": {
            "get": {
                "description": "Returns a list of categories",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get categories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by note",
                        "name": "note",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by budget ID",
                        "name": "budget",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.CategoryListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new category",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Create category",
                "parameters": [
                    {
                        "description": "Category",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CategoryCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controllers.CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs",
                "tags": [
                    "Categories"
                ],
                "summary": "Allowed HTTP verbs",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/v1/categories/{categoryId}": {
            "get": {
                "description": "Returns a specific category",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID formatted as string",
                        "name": "categoryId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a category",
                "tags": [
                    "Categories"
                ],
                "summary": "Delete category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID formatted as string",
                        "name": "categoryId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs",
                "tags": [
                    "Categories"
                ],
                "summary": "Allowed HTTP verbs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID formatted as string",
                        "name": "categoryId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "patch": {
                "description": "Update an existing category. Only values to be updated need to be specified.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Update category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID formatted as string",
                        "name": "categoryId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Category",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CategoryCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/envelopes": {
            "get": {
                "description": "Returns a list of envelopes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Envelopes"
                ],
                "summary": "Get envelopes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by note",
                        "name": "note",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by category ID",
                        "name": "category",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.EnvelopeListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new envelope",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Envelopes"
                ],
                "summary": "Create envelope",
                "parameters": [
                    {
                        "description": "Envelope",
                        "name": "envelope",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EnvelopeCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controllers.EnvelopeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs",
                "tags": [
                    "Envelopes"
                ],
                "summary": "Allowed HTTP verbs",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/envelopes/{envelopeId}": {
            "get": {
                "description": "Returns a specific envelope",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Envelopes"
                ],
                "summary": "Get envelope",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID formatted as string",
                        "name": "envelopeId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.EnvelopeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an envelope",
                "tags": [
                    "Envelopes"
                ],
                "summary": "Delete envelope",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID formatted as string",
                        "name": "envelopeId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs",
                "tags": [
                    "Envelopes"
                ],
                "summary": "Allowed HTTP verbs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID formatted as string",
                        "name": "envelopeId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "patch": {
                "description": "Updates an existing envelope. Only values to be updated need to be specified.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Envelopes"
                ],
                "summary": "Update envelope",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID formatted as string",
                        "name": "envelopeId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Envelope",
                        "name": "envelope",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EnvelopeCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.EnvelopeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/envelopes/{envelopeId}/{month}": {
            "get": {
                "description": "Returns data about an envelope for a for a specific month. **Use GET /month endpoint with month and budgetId query parameters instead.**",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Envelopes"
                ],
                "summary": "Get Envelope month data",
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID formatted as string",
                        "name": "envelopeId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The month in YYYY-MM format",
                        "name": "month",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.EnvelopeMonthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/import": {
            "post": {
                "description": "Imports budgets from YNAB 4. **Please use /v1/import/ynab4, which works exactly the same.**",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Import"
                ],
                "summary": "Import",
                "deprecated": true,
                "parameters": [
                    {
                        "type": "file",
                        "description": "File to import",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the Budget to create",
                        "name": "budgetName",
                        "in": "query"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs. **Please use /v1/import/ynab4, which works exactly the same.**",
                "tags": [
                    "Import"
                ],
                "summary": "Allowed HTTP verbs",
                "deprecated": true,
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/import/ynab4": {
            "post": {
                "description": "Imports budgets from YNAB 4",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Import"
                ],
                "summary": "Import",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File to import",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the Budget to create",
                        "name": "budgetName",
                        "in": "query"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs",
                "tags": [
                    "Import"
                ],
                "summary": "Allowed HTTP verbs",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/month-configs": {
            "get": {
                "description": "Returns a list of MonthConfigs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MonthConfigs"
                ],
                "summary": "List MonthConfigs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by name",
                        "name": "envelope",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by month",
                        "name": "month",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.MonthConfigListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs.",
                "tags": [
                    "MonthConfigs"
                ],
                "summary": "Allowed HTTP verbs",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/month-configs/{envelopeId}/{month}": {
            "get": {
                "description": "Returns configuration for a specific month",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MonthConfigs"
                ],
                "summary": "Get MonthConfig",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the Envelope",
                        "name": "envelopeId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The month in YYYY-MM format",
                        "name": "month",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.MonthConfigResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new MonthConfig",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MonthConfigs"
                ],
                "summary": "Create MonthConfig",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the Envelope",
                        "name": "envelopeId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The month in YYYY-MM format",
                        "name": "month",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "MonthConfig",
                        "name": "monthConfig",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MonthConfigCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controllers.MonthConfigResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes configuration settings for a specific month",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MonthConfigs"
                ],
                "summary": "Delete MonthConfig",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the Envelope",
                        "name": "envelopeId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The month in YYYY-MM format",
                        "name": "month",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs",
                "tags": [
                    "MonthConfigs"
                ],
                "summary": "Allowed HTTP verbs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the Envelope",
                        "name": "envelopeId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The month in YYYY-MM format",
                        "name": "month",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "patch": {
                "description": "Changes settings of an existing MonthConfig",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MonthConfigs"
                ],
                "summary": "Update MonthConfig",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the Envelope",
                        "name": "envelopeId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The month in YYYY-MM format",
                        "name": "month",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "MonthConfig",
                        "name": "monthConfig",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MonthConfigCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controllers.MonthConfigResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/months": {
            "get": {
                "description": "Returns data about a specific month.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Months"
                ],
                "summary": "Get data about a month",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID formatted as string",
                        "name": "budget",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The month in YYYY-MM format",
                        "name": "month",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.MonthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Sets allocations for a month for all envelopes that do not have an allocation yet",
                "tags": [
                    "Months"
                ],
                "summary": "Set allocations for a month",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID formatted as string",
                        "name": "budget",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The month in YYYY-MM format",
                        "name": "month",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Budget",
                        "name": "mode",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.BudgetAllocationMode"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes all allocation for the specified month",
                "tags": [
                    "Months"
                ],
                "summary": "Delete allocations for a month",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID formatted as string",
                        "name": "budget",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The month in YYYY-MM format",
                        "name": "month",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs.",
                "tags": [
                    "Months"
                ],
                "summary": "Allowed HTTP verbs",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/transactions": {
            "get": {
                "description": "Returns a list of transactions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get transactions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by note",
                        "name": "note",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by budget ID",
                        "name": "budget",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by ID of associated account, regardeless of source or destination",
                        "name": "account",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by source account ID",
                        "name": "source",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by destination account ID",
                        "name": "destination",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by envelope ID",
                        "name": "envelope",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by reconcilication state",
                        "name": "reconciled",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.TransactionListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new transaction",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Create transaction",
                "parameters": [
                    {
                        "description": "Transaction",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TransactionCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controllers.TransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs",
                "tags": [
                    "Transactions"
                ],
                "summary": "Allowed HTTP verbs",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/transactions/{transactionId}": {
            "get": {
                "description": "Returns a specific transaction",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID formatted as string",
                        "name": "transactionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.TransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a transaction",
                "tags": [
                    "Transactions"
                ],
                "summary": "Delete transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID formatted as string",
                        "name": "transactionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs",
                "tags": [
                    "Transactions"
                ],
                "summary": "Allowed HTTP verbs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID formatted as string",
                        "name": "transactionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "patch": {
                "description": "Updates an existing transaction. Only values to be updated need to be specified.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Update transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID formatted as string",
                        "name": "transactionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transaction",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TransactionCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.TransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.HTTPError"
                        }
                    }
                }
            }
        },
        "/version": {
            "get": {
                "description": "Returns the software version of the API",
                "tags": [
                    "General"
                ],
                "summary": "API version",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/router.VersionResponse"
                        }
                    }
                }
            },
            "options": {
                "description": "Returns an empty response with the HTTP Header \"allow\" set to the allowed HTTP verbs",
                "tags": [
                    "General"
                ],
                "summary": "Allowed HTTP verbs",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.Account": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number",
                    "example": 2735.17
                },
                "budgetId": {
                    "type": "string",
                    "example": "550dc009-cea6-4c12-b2a5-03446eb7b7cf"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2022-04-02T19:28:44.491514Z"
                },
                "deletedAt": {
                    "type": "string",
                    "example": "2022-04-22T21:01:05.058161Z"
                },
                "external": {
                    "type": "boolean",
                    "default": false,
                    "example": false
                },
                "hidden": {
                    "type": "boolean",
                    "default": false,
                    "example": true
                },
                "id": {
                    "type": "string",
                    "example": "65392deb-5e92-4268-b114-297faad6cdce"
                },
                "initialBalance": {
                    "type": "number",
                    "default": 0,
                    "example": 173.12
                },
                "links": {
                    "$ref": "#/definitions/controllers.AccountLinks"
                },
                "name": {
                    "type": "string",
                    "example": "Cash"
                },
                "note": {
                    "type": "string",
                    "example": "Money in my wallet"
                },
                "onBudget": {
                    "description": "Always false when external: true",
                    "type": "boolean",
                    "default": false,
                    "example": true
                },
                "reconciledBalance": {
                    "type": "number",
                    "example": 2539.57
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2022-04-17T20:14:01.048145Z"
                }
            }
        },
        "controllers.AccountLinks": {
            "type": "object",
            "properties": {
                "self": {
                    "type": "string",
                    "example": "https://example.com/api/v1/accounts/af892e10-7e0a-4fb8-b1bc-4b6d88401ed2"
                },
                "transactions": {
                    "type": "string",
                    "example": "https://example.com/api/v1/transactions?account=af892e10-7e0a-4fb8-b1bc-4b6d88401ed2"
                }
            }
        },
        "controllers.AccountListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.Account"
                    }
                }
            }
        },
        "controllers.AccountResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/controllers.Account"
                }
            }
        },
        "controllers.Allocation": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "The maximum value is \"999999999999.99999999\", swagger unfortunately rounds this.",
                    "type": "number",
                    "maximum": 1000000000000,
                    "minimum": 1e-8,
                    "multipleOf": 1e-8,
                    "example": 22.01
                },
                "createdAt": {
                    "type": "string",
                    "example": "2022-04-02T19:28:44.491514Z"
                },
                "deletedAt": {
                    "type": "string",
                    "example": "2022-04-22T21:01:05.058161Z"
                },
                "envelopeId": {
                    "type": "string",
                    "example": "a0909e84-e8f9-4cb6-82a5-025dff105ff2"
                },
                "id": {
                    "type": "string",
                    "example": "65392deb-5e92-4268-b114-297faad6cdce"
                },
                "links": {
                    "$ref": "#/definitions/controllers.AllocationLinks"
                },
                "month": {
                    "description": "Only year and month of this timestamp are used, everything else is ignored. This will always be set to 00:00 UTC on the first of the specified month",
                    "type": "string",
                    "example": "2021-12-01T00:00:00.000000Z"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2022-04-17T20:14:01.048145Z"
                }
            }
        },
        "controllers.AllocationLinks": {
            "type": "object",
            "properties": {
                "self": {
                    "type": "string",
                    "example": "https://example.com/api/v1/allocations/902cd93c-3724-4e46-8540-d014131282fc"
                }
            }
        },
        "controllers.AllocationListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.Allocation"
                    }
                }
            }
        },
        "controllers.AllocationResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/controllers.Allocation"
                }
            }
        },
        "controllers.Budget": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number",
                    "example": 3423.42
                },
                "createdAt": {
                    "type": "string",
                    "example": "2022-04-02T19:28:44.491514Z"
                },
                "currency": {
                    "type": "string",
                    "example": "€"
                },
                "deletedAt": {
                    "type": "string",
                    "example": "2022-04-22T21:01:05.058161Z"
                },
                "id": {
                    "type": "string",
                    "example": "65392deb-5e92-4268-b114-297faad6cdce"
                },
                "links": {
                    "$ref": "#/definitions/controllers.BudgetLinks"
                },
                "name": {
                    "type": "string",
                    "example": "Morre's Budget"
                },
                "note": {
                    "type": "string",
                    "example": "My personal expenses"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2022-04-17T20:14:01.048145Z"
                }
            }
        },
        "controllers.BudgetAllocationMode": {
            "type": "object",
            "properties": {
                "mode": {
                    "type": "string",
                    "example": "ALLOCATE_LAST_MONTH_SPEND"
                }
            }
        },
        "controllers.BudgetLinks": {
            "type": "object",
            "properties": {
                "accounts": {
                    "type": "string",
                    "example": "https://example.com/api/v1/accounts?budget=550dc009-cea6-4c12-b2a5-03446eb7b7cf"
                },
                "categories": {
                    "type": "string",
                    "example": "https://example.com/api/v1/categories?budget=550dc009-cea6-4c12-b2a5-03446eb7b7cf"
                },
                "envelopes": {
                    "type": "string",
                    "example": "https://example.com/api/v1/envelopes?budget=550dc009-cea6-4c12-b2a5-03446eb7b7cf"
                },
                "groupedMonth": {
                    "description": "This uses 'YYYY-MM' for clients to replace with the actual year and month.",
                    "type": "string",
                    "example": "https://example.com/api/v1/months?budget=550dc009-cea6-4c12-b2a5-03446eb7b7cf\u0026month=YYYY-MM"
                },
                "month": {
                    "description": "This uses 'YYYY-MM' for clients to replace with the actual year and month.",
                    "type": "string",
                    "example": "https://example.com/api/v1/budgets/550dc009-cea6-4c12-b2a5-03446eb7b7cf/YYYY-MM"
                },
                "monthAllocations": {
                    "description": "This uses 'YYYY-MM' for clients to replace with the actual year and month.",
                    "type": "string",
                    "example": "https://example.com/api/v1/months?budget=550dc009-cea6-4c12-b2a5-03446eb7b7cf\u0026month=YYYY-MM"
                },
                "self": {
                    "type": "string",
                    "example": "https://example.com/api/v1/budgets/550dc009-cea6-4c12-b2a5-03446eb7b7cf"
                },
                "transactions": {
                    "type": "string",
                    "example": "https://example.com/api/v1/transactions?budget=550dc009-cea6-4c12-b2a5-03446eb7b7cf"
                }
            }
        },
        "controllers.BudgetListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.Budget"
                    }
                }
            }
        },
        "controllers.BudgetMonthResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.BudgetMonth"
                }
            }
        },
        "controllers.BudgetResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/controllers.Budget"
                }
            }
        },
        "controllers.Category": {
            "type": "object",
            "properties": {
                "budgetId": {
                    "type": "string",
                    "example": "52d967d3-33f4-4b04-9ba7-772e5ab9d0ce"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2022-04-02T19:28:44.491514Z"
                },
                "deletedAt": {
                    "type": "string",
                    "example": "2022-04-22T21:01:05.058161Z"
                },
                "envelopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.Envelope"
                    }
                },
                "hidden": {
                    "type": "boolean",
                    "default": false,
                    "example": true
                },
                "id": {
                    "type": "string",
                    "example": "65392deb-5e92-4268-b114-297faad6cdce"
                },
                "links": {
                    "$ref": "#/definitions/controllers.CategoryLinks"
                },
                "name": {
                    "type": "string",
                    "example": "Saving"
                },
                "note": {
                    "type": "string",
                    "example": "All envelopes for long-term saving"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2022-04-17T20:14:01.048145Z"
                }
            }
        },
        "controllers.CategoryLinks": {
            "type": "object",
            "properties": {
                "envelopes": {
                    "type": "string",
                    "example": "https://example.com/api/v1/envelopes?category=3b1ea324-d438-4419-882a-2fc91d71772f"
                },
                "self": {
                    "type": "string",
                    "example": "https://example.com/api/v1/categories/3b1ea324-d438-4419-882a-2fc91d71772f"
                }
            }
        },
        "controllers.CategoryListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.Category"
                    }
                }
            }
        },
        "controllers.CategoryResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/controllers.Category"
                }
            }
        },
        "controllers.Envelope": {
            "type": "object",
            "properties": {
                "categoryId": {
                    "type": "string",
                    "example": "878c831f-af99-4a71-b3ca-80deb7d793c1"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2022-04-02T19:28:44.491514Z"
                },
                "deletedAt": {
                    "type": "string",
                    "example": "2022-04-22T21:01:05.058161Z"
                },
                "hidden": {
                    "type": "boolean",
                    "default": false,
                    "example": true
                },
                "id": {
                    "type": "string",
                    "example": "65392deb-5e92-4268-b114-297faad6cdce"
                },
                "links": {
                    "$ref": "#/definitions/controllers.EnvelopeLinks"
                },
                "name": {
                    "type": "string",
                    "example": "Groceries"
                },
                "note": {
                    "type": "string",
                    "example": "For stuff bought at supermarkets and drugstores"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2022-04-17T20:14:01.048145Z"
                }
            }
        },
        "controllers.EnvelopeLinks": {
            "type": "object",
            "properties": {
                "allocations": {
                    "type": "string",
                    "example": "https://example.com/api/v1/allocations?envelope=45b6b5b9-f746-4ae9-b77b-7688b91f8166"
                },
                "month": {
                    "description": "This will always end in 'YYYY-MM' for clients to use replace with actual numbers.",
                    "type": "string",
                    "example": "https://example.com/api/v1/envelopes/45b6b5b9-f746-4ae9-b77b-7688b91f8166/YYYY-MM"
                },
                "self": {
                    "type": "string",
                    "example": "https://example.com/api/v1/envelopes/45b6b5b9-f746-4ae9-b77b-7688b91f8166"
                },
                "transactions": {
                    "type": "string",
                    "example": "https://example.com/api/v1/transactions?envelope=45b6b5b9-f746-4ae9-b77b-7688b91f8166"
                }
            }
        },
        "controllers.EnvelopeListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.Envelope"
                    }
                }
            }
        },
        "controllers.EnvelopeMonthResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.EnvelopeMonth"
                }
            }
        },
        "controllers.EnvelopeResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/controllers.Envelope"
                }
            }
        },
        "controllers.MonthConfig": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "example": "2022-04-02T19:28:44.491514Z"
                },
                "deletedAt": {
                    "type": "string",
                    "example": "2022-04-22T21:01:05.058161Z"
                },
                "envelopeId": {
                    "type": "string",
                    "example": "10b9705d-3356-459e-9d5a-28d42a6c4547"
                },
                "links": {
                    "$ref": "#/definitions/controllers.MonthConfigLinks"
                },
                "month": {
                    "description": "This is always set to 00:00 UTC on the first of the month.",
                    "type": "string",
                    "example": "1969-06-01T00:00:00.000000Z"
                },
                "overspendMode": {
                    "type": "string",
                    "default": "AFFECT_AVAILABLE",
                    "example": "AFFECT_ENVELOPE"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2022-04-17T20:14:01.048145Z"
                }
            }
        },
        "controllers.MonthConfigLinks": {
            "type": "object",
            "properties": {
                "envelope": {
                    "type": "string",
                    "example": "https://example.com/api/v1/envelopes/61027ebb-ab75-4a49-9e23-a104ddd9ba6b"
                },
                "self": {
                    "type": "string",
                    "example": "https://example.com/api/v1/month-configs/61027ebb-ab75-4a49-9e23-a104ddd9ba6b/2017-10"
                }
            }
        },
        "controllers.MonthConfigListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.MonthConfig"
                    }
                }
            }
        },
        "controllers.MonthConfigResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/controllers.MonthConfig"
                }
            }
        },
        "controllers.MonthResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.Month"
                }
            }
        },
        "controllers.Transaction": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "The maximum value is \"999999999999.99999999\", swagger unfortunately rounds this.",
                    "type": "number",
                    "maximum": 1000000000000,
                    "minimum": 1e-8,
                    "multipleOf": 1e-8,
                    "example": 14.03
                },
                "budgetId": {
                    "type": "string",
                    "example": "55eecbd8-7c46-4b06-ada9-f287802fb05e"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2022-04-02T19:28:44.491514Z"
                },
                "date": {
                    "type": "string",
                    "example": "1815-12-10T18:43:00.271152Z"
                },
                "deletedAt": {
                    "type": "string",
                    "example": "2022-04-22T21:01:05.058161Z"
                },
                "destinationAccountId": {
                    "type": "string",
                    "example": "8e16b456-a719-48ce-9fec-e115cfa7cbcc"
                },
                "envelopeId": {
                    "type": "string",
                    "example": "2649c965-7999-4873-ae16-89d5d5fa972e"
                },
                "id": {
                    "type": "string",
                    "example": "65392deb-5e92-4268-b114-297faad6cdce"
                },
                "links": {
                    "$ref": "#/definitions/controllers.TransactionLinks"
                },
                "note": {
                    "type": "string",
                    "example": "Lunch"
                },
                "reconciled": {
                    "type": "boolean",
                    "default": false,
                    "example": true
                },
                "sourceAccountId": {
                    "type": "string",
                    "example": "fd81dc45-a3a2-468e-a6fa-b2618f30aa45"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2022-04-17T20:14:01.048145Z"
                }
            }
        },
        "controllers.TransactionLinks": {
            "type": "object",
            "properties": {
                "self": {
                    "type": "string",
                    "example": "https://example.com/api/v1/transactions/d430d7c3-d14c-4712-9336-ee56965a6673"
                }
            }
        },
        "controllers.TransactionListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.Transaction"
                    }
                }
            }
        },
        "controllers.TransactionResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/controllers.Transaction"
                }
            }
        },
        "httperrors.HTTPError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "An ID specified in the query string was not a valid uint64"
                }
            }
        },
        "models.AccountCreate": {
            "type": "object",
            "properties": {
                "budgetId": {
                    "type": "string",
                    "example": "550dc009-cea6-4c12-b2a5-03446eb7b7cf"
                },
                "external": {
                    "type": "boolean",
                    "default": false,
                    "example": false
                },
                "hidden": {
                    "type": "boolean",
                    "default": false,
                    "example": true
                },
                "initialBalance": {
                    "type": "number",
                    "default": 0,
                    "example": 173.12
                },
                "name": {
                    "type": "string",
                    "example": "Cash"
                },
                "note": {
                    "type": "string",
                    "example": "Money in my wallet"
                },
                "onBudget": {
                    "description": "Always false when external: true",
                    "type": "boolean",
                    "default": false,
                    "example": true
                }
            }
        },
        "models.AllocationCreate": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "The maximum value is \"999999999999.99999999\", swagger unfortunately rounds this.",
                    "type": "number",
                    "maximum": 1000000000000,
                    "minimum": 1e-8,
                    "multipleOf": 1e-8,
                    "example": 22.01
                },
                "envelopeId": {
                    "type": "string",
                    "example": "a0909e84-e8f9-4cb6-82a5-025dff105ff2"
                },
                "month": {
                    "description": "Only year and month of this timestamp are used, everything else is ignored. This will always be set to 00:00 UTC on the first of the specified month",
                    "type": "string",
                    "example": "2021-12-01T00:00:00.000000Z"
                }
            }
        },
        "models.BudgetCreate": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string",
                    "example": "€"
                },
                "name": {
                    "type": "string",
                    "example": "Morre's Budget"
                },
                "note": {
                    "type": "string",
                    "example": "My personal expenses"
                }
            }
        },
        "models.BudgetMonth": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "number",
                    "example": 217.34
                },
                "budgeted": {
                    "type": "number",
                    "example": 2100
                },
                "envelopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EnvelopeMonth"
                    }
                },
                "id": {
                    "description": "The ID of the Budget",
                    "type": "string",
                    "example": "1e777d24-3f5b-4c43-8000-04f65f895578"
                },
                "income": {
                    "type": "number",
                    "example": 2317.34
                },
                "month": {
                    "description": "This is always set to 00:00 UTC on the first of the month.",
                    "type": "string",
                    "example": "2006-05-01T00:00:00.000000Z"
                },
                "name": {
                    "description": "The name of the Budget",
                    "type": "string",
                    "example": "Groceries"
                }
            }
        },
        "models.CategoryCreate": {
            "type": "object",
            "properties": {
                "budgetId": {
                    "type": "string",
                    "example": "52d967d3-33f4-4b04-9ba7-772e5ab9d0ce"
                },
                "hidden": {
                    "type": "boolean",
                    "default": false,
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Saving"
                },
                "note": {
                    "type": "string",
                    "example": "All envelopes for long-term saving"
                }
            }
        },
        "models.CategoryEnvelopes": {
            "type": "object",
            "properties": {
                "envelopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EnvelopeMonth"
                    }
                },
                "id": {
                    "type": "string",
                    "example": "dafd9a74-6aeb-46b9-9f5a-cfca624fea85"
                },
                "name": {
                    "type": "string",
                    "example": "Rainy Day Funds"
                }
            }
        },
        "models.EnvelopeCreate": {
            "type": "object",
            "properties": {
                "categoryId": {
                    "type": "string",
                    "example": "878c831f-af99-4a71-b3ca-80deb7d793c1"
                },
                "hidden": {
                    "type": "boolean",
                    "default": false,
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Groceries"
                },
                "note": {
                    "type": "string",
                    "example": "For stuff bought at supermarkets and drugstores"
                }
            }
        },
        "models.EnvelopeMonth": {
            "type": "object",
            "properties": {
                "allocation": {
                    "type": "number",
                    "example": 85.44
                },
                "balance": {
                    "type": "number",
                    "example": 12.32
                },
                "id": {
                    "description": "The ID of the Envelope",
                    "type": "string",
                    "example": "10b9705d-3356-459e-9d5a-28d42a6c4547"
                },
                "links": {
                    "$ref": "#/definitions/models.EnvelopeMonthLinks"
                },
                "month": {
                    "description": "This is always set to 00:00 UTC on the first of the month. **This field is deprecated and will be removed in v2**",
                    "type": "string",
                    "example": "1969-06-01T00:00:00.000000Z"
                },
                "name": {
                    "description": "The name of the Envelope",
                    "type": "string",
                    "example": "Groceries"
                },
                "spent": {
                    "type": "number",
                    "example": 73.12
                }
            }
        },
        "models.EnvelopeMonthLinks": {
            "type": "object",
            "properties": {
                "allocation": {
                    "description": "This is an empty string when no allocation exists",
                    "type": "string",
                    "example": "https://example.com/api/v1/allocations/772d6956-ecba-485b-8a27-46a506c5a2a3"
                }
            }
        },
        "models.Month": {
            "type": "object",
            "properties": {
                "available": {
                    "description": "The amount available to budget",
                    "type": "number",
                    "example": 217.34
                },
                "balance": {
                    "description": "The sum of all envelope balances",
                    "type": "number",
                    "example": 5231.37
                },
                "budgeted": {
                    "description": "The sum of all allocations for the month",
                    "type": "number",
                    "example": 2100
                },
                "categories": {
                    "description": "A list of envelope month calculations grouped by category",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CategoryEnvelopes"
                    }
                },
                "id": {
                    "description": "The ID of the Budget",
                    "type": "string",
                    "example": "1e777d24-3f5b-4c43-8000-04f65f895578"
                },
                "income": {
                    "description": "The total income for the month (sum of all incoming transactions without an Envelope)",
                    "type": "number",
                    "example": 2317.34
                },
                "month": {
                    "description": "This is always set to 00:00 UTC on the first of the month.",
                    "type": "string",
                    "example": "2006-05-01T00:00:00.000000Z"
                },
                "name": {
                    "description": "The name of the Budget",
                    "type": "string",
                    "example": "Zero budget"
                },
                "spent": {
                    "description": "The amount of money spent in this month",
                    "type": "number",
                    "example": 133.7
                }
            }
        },
        "models.MonthConfigCreate": {
            "type": "object",
            "properties": {
                "overspendMode": {
                    "type": "string",
                    "default": "AFFECT_AVAILABLE",
                    "example": "AFFECT_ENVELOPE"
                }
            }
        },
        "models.TransactionCreate": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "The maximum value is \"999999999999.99999999\", swagger unfortunately rounds this.",
                    "type": "number",
                    "maximum": 1000000000000,
                    "minimum": 1e-8,
                    "multipleOf": 1e-8,
                    "example": 14.03
                },
                "budgetId": {
                    "type": "string",
                    "example": "55eecbd8-7c46-4b06-ada9-f287802fb05e"
                },
                "date": {
                    "type": "string",
                    "example": "1815-12-10T18:43:00.271152Z"
                },
                "destinationAccountId": {
                    "type": "string",
                    "example": "8e16b456-a719-48ce-9fec-e115cfa7cbcc"
                },
                "envelopeId": {
                    "type": "string",
                    "example": "2649c965-7999-4873-ae16-89d5d5fa972e"
                },
                "note": {
                    "type": "string",
                    "example": "Lunch"
                },
                "reconciled": {
                    "type": "boolean",
                    "default": false,
                    "example": true
                },
                "sourceAccountId": {
                    "type": "string",
                    "example": "fd81dc45-a3a2-468e-a6fa-b2618f30aa45"
                }
            }
        },
        "router.RootLinks": {
            "type": "object",
            "properties": {
                "docs": {
                    "type": "string",
                    "example": "https://example.com/api/docs/index.html"
                },
                "v1": {
                    "type": "string",
                    "example": "https://example.com/api/v1"
                },
                "version": {
                    "type": "string",
                    "example": "https://example.com/api/version"
                }
            }
        },
        "router.RootResponse": {
            "type": "object",
            "properties": {
                "links": {
                    "$ref": "#/definitions/router.RootLinks"
                }
            }
        },
        "router.V1Links": {
            "type": "object",
            "properties": {
                "accounts": {
                    "type": "string",
                    "example": "https://example.com/api/v1/accounts"
                },
                "allocations": {
                    "type": "string",
                    "example": "https://example.com/api/v1/allocations"
                },
                "budgets": {
                    "type": "string",
                    "example": "https://example.com/api/v1/budgets"
                },
                "categories": {
                    "type": "string",
                    "example": "https://example.com/api/v1/categories"
                },
                "envelopes": {
                    "type": "string",
                    "example": "https://example.com/api/v1/envelopes"
                },
                "import": {
                    "type": "string",
                    "example": "https://example.com/api/v1/import"
                },
                "months": {
                    "type": "string",
                    "example": "https://example.com/api/v1/months"
                },
                "transactions": {
                    "type": "string",
                    "example": "https://example.com/api/v1/transactions"
                }
            }
        },
        "router.V1Response": {
            "type": "object",
            "properties": {
                "links": {
                    "$ref": "#/definitions/router.V1Links"
                }
            }
        },
        "router.VersionObject": {
            "type": "object",
            "properties": {
                "version": {
                    "type": "string",
                    "example": "1.1.0"
                }
            }
        },
        "router.VersionResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/router.VersionObject"
                }
            }
        }
    }
}