definitions:
  controllers.Account:
    properties:
      balance:
        example: 2735.17
        type: number
      budgetId:
        example: 550dc009-cea6-4c12-b2a5-03446eb7b7cf
        type: string
      createdAt:
        description: Time the resource was created
        example: "2022-04-02T19:28:44.491514Z"
        type: string
      deletedAt:
        description: Time the resource was marked as deleted
        example: "2022-04-22T21:01:05.058161Z"
        type: string
      external:
        default: false
        example: false
        type: boolean
      hidden:
        default: false
        example: true
        type: boolean
      id:
        description: UUID for the resource
        example: 65392deb-5e92-4268-b114-297faad6cdce
        type: string
      importHash:
        description: The SHA256 hash of a unique combination of values to use in duplicate
          detection
        example: 867e3a26dc0baf73f4bff506f31a97f6c32088917e9e5cf1a5ed6f3f84a6fa70
        type: string
      initialBalance:
        default: 0
        example: 173.12
        type: number
      initialBalanceDate:
        example: "2017-05-12T00:00:00Z"
        type: string
      links:
        properties:
          self:
            example: https://example.com/api/v1/accounts/af892e10-7e0a-4fb8-b1bc-4b6d88401ed2
            type: string
          transactions:
            example: https://example.com/api/v1/transactions?account=af892e10-7e0a-4fb8-b1bc-4b6d88401ed2
            type: string
        type: object
      name:
        example: Cash
        type: string
      note:
        example: Money in my wallet
        type: string
      onBudget:
        default: false
        description: 'Always false when external: true'
        example: true
        type: boolean
      recentEnvelopes:
        items:
          $ref: '#/definitions/models.Envelope'
        type: array
      reconciledBalance:
        example: 2539.57
        type: number
      updatedAt:
        description: Last time the resource was updated
        example: "2022-04-17T20:14:01.048145Z"
        type: string
    type: object
  controllers.AccountListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/controllers.Account'
        type: array
    type: object
  controllers.AccountResponse:
    properties:
      data:
        $ref: '#/definitions/controllers.Account'
    type: object
  controllers.AllocationListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Allocation'
        type: array
    type: object
  controllers.AllocationMode:
    enum:
    - ALLOCATE_LAST_MONTH_BUDGET
    - ALLOCATE_LAST_MONTH_SPEND
    type: string
    x-enum-varnames:
    - AllocateLastMonthBudget
    - AllocateLastMonthSpend
  controllers.AllocationResponse:
    properties:
      data:
        $ref: '#/definitions/models.Allocation'
    type: object
  controllers.BudgetAllocationMode:
    properties:
      mode:
        allOf:
        - $ref: '#/definitions/controllers.AllocationMode'
        example: ALLOCATE_LAST_MONTH_SPEND
    type: object
  controllers.BudgetListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Budget'
        type: array
    type: object
  controllers.BudgetMonthResponse:
    properties:
      data:
        $ref: '#/definitions/models.BudgetMonth'
    type: object
  controllers.BudgetResponse:
    properties:
      data:
        $ref: '#/definitions/models.Budget'
    type: object
  controllers.Category:
    properties:
      budgetId:
        description: ID of the budget the category belongs to
        example: 52d967d3-33f4-4b04-9ba7-772e5ab9d0ce
        type: string
      createdAt:
        description: Time the resource was created
        example: "2022-04-02T19:28:44.491514Z"
        type: string
      deletedAt:
        description: Time the resource was marked as deleted
        example: "2022-04-22T21:01:05.058161Z"
        type: string
      envelopes:
        items:
          $ref: '#/definitions/models.Envelope'
        type: array
      hidden:
        default: false
        description: Is the category hidden?
        example: true
        type: boolean
      id:
        description: UUID for the resource
        example: 65392deb-5e92-4268-b114-297faad6cdce
        type: string
      links:
        properties:
          envelopes:
            example: https://example.com/api/v1/envelopes?category=3b1ea324-d438-4419-882a-2fc91d71772f
            type: string
          self:
            example: https://example.com/api/v1/categories/3b1ea324-d438-4419-882a-2fc91d71772f
            type: string
        type: object
      name:
        description: Name of the category
        example: Saving
        type: string
      note:
        description: Notes about the category
        example: All envelopes for long-term saving
        type: string
      updatedAt:
        description: Last time the resource was updated
        example: "2022-04-17T20:14:01.048145Z"
        type: string
    type: object
  controllers.CategoryListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/controllers.Category'
        type: array
    type: object
  controllers.CategoryResponse:
    properties:
      data:
        $ref: '#/definitions/controllers.Category'
    type: object
  controllers.EnvelopeListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Envelope'
        type: array
    type: object
  controllers.EnvelopeMonthResponse:
    properties:
      data:
        $ref: '#/definitions/models.EnvelopeMonth'
    type: object
  controllers.EnvelopeResponse:
    properties:
      data:
        $ref: '#/definitions/models.Envelope'
    type: object
  controllers.ImportPreviewList:
    properties:
      data:
        items:
          $ref: '#/definitions/importer.TransactionPreview'
        type: array
    type: object
  controllers.MonthConfigListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.MonthConfig'
        type: array
    type: object
  controllers.MonthConfigResponse:
    properties:
      data:
        $ref: '#/definitions/models.MonthConfig'
    type: object
  controllers.MonthResponse:
    properties:
      data:
        $ref: '#/definitions/models.Month'
    type: object
  controllers.TransactionListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Transaction'
        type: array
    type: object
  controllers.TransactionResponse:
    properties:
      data:
        $ref: '#/definitions/models.Transaction'
    type: object
  httperrors.HTTPError:
    properties:
      error:
        example: An ID specified in the query string was not a valid uint64
        type: string
    type: object
  importer.TransactionPreview:
    properties:
      destinationAccountName:
        description: Name of the destination account if the ID is not known
        example: Deutsche Bahn
        type: string
      duplicateTransactionIds:
        description: IDs of transactions that this transaction duplicates
        items:
          type: string
        type: array
      model:
        $ref: '#/definitions/models.Transaction'
      sourceAccountName:
        description: Name of the source account if the ID is not known
        example: Employer
        type: string
    type: object
  models.AccountCreate:
    properties:
      budgetId:
        example: 550dc009-cea6-4c12-b2a5-03446eb7b7cf
        type: string
      external:
        default: false
        example: false
        type: boolean
      hidden:
        default: false
        example: true
        type: boolean
      importHash:
        description: The SHA256 hash of a unique combination of values to use in duplicate
          detection
        example: 867e3a26dc0baf73f4bff506f31a97f6c32088917e9e5cf1a5ed6f3f84a6fa70
        type: string
      initialBalance:
        default: 0
        example: 173.12
        type: number
      initialBalanceDate:
        example: "2017-05-12T00:00:00Z"
        type: string
      name:
        example: Cash
        type: string
      note:
        example: Money in my wallet
        type: string
      onBudget:
        default: false
        description: 'Always false when external: true'
        example: true
        type: boolean
    type: object
  models.Allocation:
    properties:
      amount:
        description: The maximum value is "999999999999.99999999", swagger unfortunately
          rounds this.
        example: 22.01
        maximum: 1000000000000
        minimum: 1e-08
        multipleOf: 1e-08
        type: number
      createdAt:
        description: Time the resource was created
        example: "2022-04-02T19:28:44.491514Z"
        type: string
      deletedAt:
        description: Time the resource was marked as deleted
        example: "2022-04-22T21:01:05.058161Z"
        type: string
      envelopeId:
        example: a0909e84-e8f9-4cb6-82a5-025dff105ff2
        type: string
      id:
        description: UUID for the resource
        example: 65392deb-5e92-4268-b114-297faad6cdce
        type: string
      links:
        properties:
          self:
            example: https://example.com/api/v1/allocations/902cd93c-3724-4e46-8540-d014131282fc
            type: string
        type: object
      month:
        description: Only year and month of this timestamp are used, everything else
          is ignored. This will always be set to 00:00 UTC on the first of the specified
          month
        example: "2021-12-01T00:00:00.000000Z"
        type: string
      updatedAt:
        description: Last time the resource was updated
        example: "2022-04-17T20:14:01.048145Z"
        type: string
    type: object
  models.AllocationCreate:
    properties:
      amount:
        description: The maximum value is "999999999999.99999999", swagger unfortunately
          rounds this.
        example: 22.01
        maximum: 1000000000000
        minimum: 1e-08
        multipleOf: 1e-08
        type: number
      envelopeId:
        example: a0909e84-e8f9-4cb6-82a5-025dff105ff2
        type: string
      month:
        description: Only year and month of this timestamp are used, everything else
          is ignored. This will always be set to 00:00 UTC on the first of the specified
          month
        example: "2021-12-01T00:00:00.000000Z"
        type: string
    type: object
  models.Budget:
    properties:
      balance:
        description: DEPRECATED. Will be removed in API v2, see https://github.com/envelope-zero/backend/issues/526.
        example: 3423.42
        type: number
      createdAt:
        description: Time the resource was created
        example: "2022-04-02T19:28:44.491514Z"
        type: string
      currency:
        example: €
        type: string
      deletedAt:
        description: Time the resource was marked as deleted
        example: "2022-04-22T21:01:05.058161Z"
        type: string
      id:
        description: UUID for the resource
        example: 65392deb-5e92-4268-b114-297faad6cdce
        type: string
      links:
        properties:
          accounts:
            example: https://example.com/api/v1/accounts?budget=550dc009-cea6-4c12-b2a5-03446eb7b7cf
            type: string
          categories:
            example: https://example.com/api/v1/categories?budget=550dc009-cea6-4c12-b2a5-03446eb7b7cf
            type: string
          envelopes:
            example: https://example.com/api/v1/envelopes?budget=550dc009-cea6-4c12-b2a5-03446eb7b7cf
            type: string
          groupedMonth:
            description: This uses 'YYYY-MM' for clients to replace with the actual
              year and month.
            example: https://example.com/api/v1/months?budget=550dc009-cea6-4c12-b2a5-03446eb7b7cf&month=YYYY-MM
            type: string
          month:
            description: This uses 'YYYY-MM' for clients to replace with the actual
              year and month.
            example: https://example.com/api/v1/budgets/550dc009-cea6-4c12-b2a5-03446eb7b7cf/YYYY-MM
            type: string
          monthAllocations:
            description: This uses 'YYYY-MM' for clients to replace with the actual
              year and month.
            example: https://example.com/api/v1/months?budget=550dc009-cea6-4c12-b2a5-03446eb7b7cf&month=YYYY-MM
            type: string
          self:
            example: https://example.com/api/v1/budgets/550dc009-cea6-4c12-b2a5-03446eb7b7cf
            type: string
          transactions:
            example: https://example.com/api/v1/transactions?budget=550dc009-cea6-4c12-b2a5-03446eb7b7cf
            type: string
        type: object
      name:
        example: Morre's Budget
        type: string
      note:
        example: My personal expenses
        type: string
      updatedAt:
        description: Last time the resource was updated
        example: "2022-04-17T20:14:01.048145Z"
        type: string
    type: object
  models.BudgetCreate:
    properties:
      currency:
        example: €
        type: string
      name:
        example: Morre's Budget
        type: string
      note:
        example: My personal expenses
        type: string
    type: object
  models.BudgetMonth:
    properties:
      available:
        example: 217.34
        type: number
      budgeted:
        example: 2100
        type: number
      envelopes:
        items:
          $ref: '#/definitions/models.EnvelopeMonth'
        type: array
      id:
        description: The ID of the Budget
        example: 1e777d24-3f5b-4c43-8000-04f65f895578
        type: string
      income:
        example: 2317.34
        type: number
      month:
        example: "2006-05-01T00:00:00.000000Z"
        type: string
      name:
        description: The name of the Budget
        example: Groceries
        type: string
    type: object
  models.CategoryCreate:
    properties:
      budgetId:
        description: ID of the budget the category belongs to
        example: 52d967d3-33f4-4b04-9ba7-772e5ab9d0ce
        type: string
      hidden:
        default: false
        description: Is the category hidden?
        example: true
        type: boolean
      name:
        description: Name of the category
        example: Saving
        type: string
      note:
        description: Notes about the category
        example: All envelopes for long-term saving
        type: string
    type: object
  models.CategoryEnvelopes:
    properties:
      allocation:
        description: Sum of allocations for the envelopes
        example: 90
        type: number
      balance:
        description: Sum of the balances of the envelopes
        example: -10.13
        type: number
      budgetId:
        description: ID of the budget the category belongs to
        example: 52d967d3-33f4-4b04-9ba7-772e5ab9d0ce
        type: string
      createdAt:
        description: Time the resource was created
        example: "2022-04-02T19:28:44.491514Z"
        type: string
      deletedAt:
        description: Time the resource was marked as deleted
        example: "2022-04-22T21:01:05.058161Z"
        type: string
      envelopes:
        description: Slice of all envelopes
        items:
          $ref: '#/definitions/models.EnvelopeMonth'
        type: array
      hidden:
        default: false
        description: Is the category hidden?
        example: true
        type: boolean
      id:
        description: UUID for the resource
        example: 65392deb-5e92-4268-b114-297faad6cdce
        type: string
      links:
        properties:
          envelopes:
            example: https://example.com/api/v1/envelopes?category=3b1ea324-d438-4419-882a-2fc91d71772f
            type: string
          self:
            example: https://example.com/api/v1/categories/3b1ea324-d438-4419-882a-2fc91d71772f
            type: string
        type: object
      name:
        description: Name of the category
        example: Saving
        type: string
      note:
        description: Notes about the category
        example: All envelopes for long-term saving
        type: string
      spent:
        description: Sum spent for all envelopes
        example: 100.13
        type: number
      updatedAt:
        description: Last time the resource was updated
        example: "2022-04-17T20:14:01.048145Z"
        type: string
    type: object
  models.Envelope:
    properties:
      categoryId:
        description: ID of the category the envelope belongs to
        example: 878c831f-af99-4a71-b3ca-80deb7d793c1
        type: string
      createdAt:
        description: Time the resource was created
        example: "2022-04-02T19:28:44.491514Z"
        type: string
      deletedAt:
        description: Time the resource was marked as deleted
        example: "2022-04-22T21:01:05.058161Z"
        type: string
      hidden:
        default: false
        description: Is the envelope hidden?
        example: true
        type: boolean
      id:
        description: UUID for the resource
        example: 65392deb-5e92-4268-b114-297faad6cdce
        type: string
      links:
        description: Links to related resources
        properties:
          allocations:
            description: URL for the envelope's allocations
            example: https://example.com/api/v1/allocations?envelope=45b6b5b9-f746-4ae9-b77b-7688b91f8166
            type: string
          month:
            description: URL to query for month information. This will always end
              in 'YYYY-MM' for clients to use replace with actual numbers.
            example: https://example.com/api/v1/envelopes/45b6b5b9-f746-4ae9-b77b-7688b91f8166/YYYY-MM
            type: string
          self:
            description: URL of the envelope
            example: https://example.com/api/v1/envelopes/45b6b5b9-f746-4ae9-b77b-7688b91f8166
            type: string
          transactions:
            description: URL for the envelope's transactions
            example: https://example.com/api/v1/transactions?envelope=45b6b5b9-f746-4ae9-b77b-7688b91f8166
            type: string
        type: object
      name:
        description: Name of the envelope
        example: Groceries
        type: string
      note:
        description: Notes about the envelope
        example: For stuff bought at supermarkets and drugstores
        type: string
      updatedAt:
        description: Last time the resource was updated
        example: "2022-04-17T20:14:01.048145Z"
        type: string
    type: object
  models.EnvelopeCreate:
    properties:
      categoryId:
        description: ID of the category the envelope belongs to
        example: 878c831f-af99-4a71-b3ca-80deb7d793c1
        type: string
      hidden:
        default: false
        description: Is the envelope hidden?
        example: true
        type: boolean
      name:
        description: Name of the envelope
        example: Groceries
        type: string
      note:
        description: Notes about the envelope
        example: For stuff bought at supermarkets and drugstores
        type: string
    type: object
  models.EnvelopeMonth:
    properties:
      allocation:
        description: The amount of money allocated
        example: 85.44
        type: number
      balance:
        description: The balance at the end of the monht
        example: 12.32
        type: number
      categoryId:
        description: ID of the category the envelope belongs to
        example: 878c831f-af99-4a71-b3ca-80deb7d793c1
        type: string
      createdAt:
        description: Time the resource was created
        example: "2022-04-02T19:28:44.491514Z"
        type: string
      deletedAt:
        description: Time the resource was marked as deleted
        example: "2022-04-22T21:01:05.058161Z"
        type: string
      hidden:
        default: false
        description: Is the envelope hidden?
        example: true
        type: boolean
      id:
        description: UUID for the resource
        example: 65392deb-5e92-4268-b114-297faad6cdce
        type: string
      links:
        allOf:
        - $ref: '#/definitions/models.EnvelopeMonthLinks'
        description: Linked resources
      month:
        description: This is always set to 00:00 UTC on the first of the month. **This
          field is deprecated and will be removed in v2**
        example: "1969-06-01T00:00:00.000000Z"
        type: string
      name:
        description: Name of the envelope
        example: Groceries
        type: string
      note:
        description: Notes about the envelope
        example: For stuff bought at supermarkets and drugstores
        type: string
      spent:
        description: The amount spent over the whole month
        example: 73.12
        type: number
      updatedAt:
        description: Last time the resource was updated
        example: "2022-04-17T20:14:01.048145Z"
        type: string
    type: object
  models.EnvelopeMonthLinks:
    properties:
      allocation:
        description: This is an empty string when no allocation exists
        example: https://example.com/api/v1/allocations/772d6956-ecba-485b-8a27-46a506c5a2a3
        type: string
    type: object
  models.Month:
    properties:
      allocation:
        description: The sum of all allocations for this month
        example: 1200.5
        type: number
      available:
        description: The amount available to budget
        example: 217.34
        type: number
      balance:
        description: The sum of all envelope balances
        example: 5231.37
        type: number
      budgeted:
        description: The sum of all allocations for the month. **Deprecated, please
          use the `allocation` field**
        example: 2100
        type: number
      categories:
        description: A list of envelope month calculations grouped by category
        items:
          $ref: '#/definitions/models.CategoryEnvelopes'
        type: array
      id:
        description: The ID of the Budget
        example: 1e777d24-3f5b-4c43-8000-04f65f895578
        type: string
      income:
        description: The total income for the month (sum of all incoming transactions
          without an Envelope)
        example: 2317.34
        type: number
      month:
        description: The month
        example: "2006-05-01T00:00:00.000000Z"
        type: string
      name:
        description: The name of the Budget
        example: Zero budget
        type: string
      spent:
        description: The amount of money spent in this month
        example: 133.7
        type: number
    type: object
  models.MonthConfig:
    properties:
      createdAt:
        description: Time the resource was created
        example: "2022-04-02T19:28:44.491514Z"
        type: string
      deletedAt:
        description: Time the resource was marked as deleted
        example: "2022-04-22T21:01:05.058161Z"
        type: string
      envelopeId:
        example: 10b9705d-3356-459e-9d5a-28d42a6c4547
        type: string
      links:
        properties:
          envelope:
            description: URL of the envelope this config belongs to
            example: https://example.com/api/v1/envelopes/61027ebb-ab75-4a49-9e23-a104ddd9ba6b
            type: string
          self:
            description: URL for the month config
            example: https://example.com/api/v1/month-configs/61027ebb-ab75-4a49-9e23-a104ddd9ba6b/2017-10
            type: string
        type: object
      month:
        description: This is always set to 00:00 UTC on the first of the month.
        example: "1969-06-01T00:00:00.000000Z"
        type: string
      note:
        description: A note for the month config
        example: Added 200€ here because we replaced Tim's expensive vase
        type: string
      overspendMode:
        allOf:
        - $ref: '#/definitions/models.OverspendMode'
        default: AFFECT_AVAILABLE
        example: AFFECT_ENVELOPE
      updatedAt:
        description: Last time the resource was updated
        example: "2022-04-17T20:14:01.048145Z"
        type: string
    type: object
  models.MonthConfigCreate:
    properties:
      note:
        description: A note for the month config
        example: Added 200€ here because we replaced Tim's expensive vase
        type: string
      overspendMode:
        allOf:
        - $ref: '#/definitions/models.OverspendMode'
        default: AFFECT_AVAILABLE
        example: AFFECT_ENVELOPE
    type: object
  models.OverspendMode:
    enum:
    - AFFECT_AVAILABLE
    - AFFECT_ENVELOPE
    type: string
    x-enum-varnames:
    - AffectAvailable
    - AffectEnvelope
  models.Transaction:
    properties:
      amount:
        description: The maximum value is "999999999999.99999999", swagger unfortunately
          rounds this.
        example: 14.03
        maximum: 1000000000000
        minimum: 1e-08
        multipleOf: 1e-08
        type: number
      availableFrom:
        description: The date from which on the transaction amount is available for
          budgeting. Only used for income transactions. Defaults to the transaction
          date.
        example: "2021-11-17T00:00:00Z"
        type: string
      budgetId:
        example: 55eecbd8-7c46-4b06-ada9-f287802fb05e
        type: string
      createdAt:
        description: Time the resource was created
        example: "2022-04-02T19:28:44.491514Z"
        type: string
      date:
        example: "1815-12-10T18:43:00.271152Z"
        type: string
      deletedAt:
        description: Time the resource was marked as deleted
        example: "2022-04-22T21:01:05.058161Z"
        type: string
      destinationAccountId:
        example: 8e16b456-a719-48ce-9fec-e115cfa7cbcc
        type: string
      envelopeId:
        example: 2649c965-7999-4873-ae16-89d5d5fa972e
        type: string
      id:
        description: UUID for the resource
        example: 65392deb-5e92-4268-b114-297faad6cdce
        type: string
      importHash:
        description: The SHA256 hash of a unique combination of values to use in duplicate
          detection
        example: 867e3a26dc0baf73f4bff506f31a97f6c32088917e9e5cf1a5ed6f3f84a6fa70
        type: string
      links:
        description: Links for the transaction
        properties:
          self:
            description: URL of the transaction resource
            example: https://example.com/api/v1/transactions/d430d7c3-d14c-4712-9336-ee56965a6673
            type: string
        type: object
      note:
        example: Lunch
        type: string
      reconciled:
        default: false
        description: DEPRECATED. Do not use, this field does not work as intended.
          See https://github.com/envelope-zero/backend/issues/528. Use reconciledSource
          and reconciledDestination instead.
        example: true
        type: boolean
      reconciledDestination:
        default: false
        example: true
        type: boolean
      reconciledSource:
        default: false
        example: true
        type: boolean
      sourceAccountId:
        example: fd81dc45-a3a2-468e-a6fa-b2618f30aa45
        type: string
      updatedAt:
        description: Last time the resource was updated
        example: "2022-04-17T20:14:01.048145Z"
        type: string
    type: object
  models.TransactionCreate:
    properties:
      amount:
        description: The maximum value is "999999999999.99999999", swagger unfortunately
          rounds this.
        example: 14.03
        maximum: 1000000000000
        minimum: 1e-08
        multipleOf: 1e-08
        type: number
      availableFrom:
        description: The date from which on the transaction amount is available for
          budgeting. Only used for income transactions. Defaults to the transaction
          date.
        example: "2021-11-17T00:00:00Z"
        type: string
      budgetId:
        example: 55eecbd8-7c46-4b06-ada9-f287802fb05e
        type: string
      date:
        example: "1815-12-10T18:43:00.271152Z"
        type: string
      destinationAccountId:
        example: 8e16b456-a719-48ce-9fec-e115cfa7cbcc
        type: string
      envelopeId:
        example: 2649c965-7999-4873-ae16-89d5d5fa972e
        type: string
      importHash:
        description: The SHA256 hash of a unique combination of values to use in duplicate
          detection
        example: 867e3a26dc0baf73f4bff506f31a97f6c32088917e9e5cf1a5ed6f3f84a6fa70
        type: string
      note:
        example: Lunch
        type: string
      reconciled:
        default: false
        description: DEPRECATED. Do not use, this field does not work as intended.
          See https://github.com/envelope-zero/backend/issues/528. Use reconciledSource
          and reconciledDestination instead.
        example: true
        type: boolean
      reconciledDestination:
        default: false
        example: true
        type: boolean
      reconciledSource:
        default: false
        example: true
        type: boolean
      sourceAccountId:
        example: fd81dc45-a3a2-468e-a6fa-b2618f30aa45
        type: string
    type: object
  router.RootLinks:
    properties:
      docs:
        description: Swagger API documentation
        example: https://example.com/api/docs/index.html
        type: string
      v1:
        description: List endpoint for all v1 endpoints
        example: https://example.com/api/v1
        type: string
      version:
        description: Endpoint returning the version of the backend
        example: https://example.com/api/version
        type: string
    type: object
  router.RootResponse:
    properties:
      links:
        $ref: '#/definitions/router.RootLinks'
    type: object
  router.V1Links:
    properties:
      accounts:
        description: URL of account list endpoint
        example: https://example.com/api/v1/accounts
        type: string
      allocations:
        description: URL of allocation list endpoint
        example: https://example.com/api/v1/allocations
        type: string
      budgets:
        description: URL of budget list endpoint
        example: https://example.com/api/v1/budgets
        type: string
      categories:
        description: URL of category list endpoint
        example: https://example.com/api/v1/categories
        type: string
      envelopes:
        description: URL of envelope list endpoint
        example: https://example.com/api/v1/envelopes
        type: string
      import:
        description: URL of import list endpoint
        example: https://example.com/api/v1/import
        type: string
      months:
        description: URL of month list endpoint
        example: https://example.com/api/v1/months
        type: string
      transactions:
        description: URL of transaction list endpoint
        example: https://example.com/api/v1/transactions
        type: string
    type: object
  router.V1Response:
    properties:
      links:
        allOf:
        - $ref: '#/definitions/router.V1Links'
        description: Links for the v1 API
    type: object
  router.VersionObject:
    properties:
      version:
        description: the running version of the Envelope Zero backend
        example: 1.1.0
        type: string
    type: object
  router.VersionResponse:
    properties:
      data:
        allOf:
        - $ref: '#/definitions/router.VersionObject'
        description: Data object for the version endpoint
    type: object
info:
  contact: {}
paths:
  /:
    get:
      description: Entrypoint for the API, listing all endpoints
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/router.RootResponse'
      summary: API root
      tags:
      - General
    options:
      description: Returns an empty response with the HTTP Header "allow" set to the
        allowed HTTP verbs
      responses:
        "204":
          description: No Content
      summary: Allowed HTTP verbs
      tags:
      - General
  /v1:
    delete:
      description: Permanently deletes all resources
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Delete everything
      tags:
      - v1
    get:
      description: Returns general information about the v1 API
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/router.V1Response'
      summary: v1 API
      tags:
      - v1
    options:
      description: Returns an empty response with the HTTP Header "allow" set to the
        allowed HTTP verbs
      responses:
        "204":
          description: No Content
      summary: Allowed HTTP verbs
      tags:
      - v1
  /v1/accounts:
    get:
      description: Returns a list of accounts
      parameters:
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by note
        in: query
        name: note
        type: string
      - description: Filter by budget ID
        in: query
        name: budget
        type: string
      - description: Is the account on-budget?
        in: query
        name: onBudget
        type: boolean
      - description: Is the account external?
        in: query
        name: external
        type: boolean
      - description: Is the account hidden?
        in: query
        name: hidden
        type: boolean
      - description: Search for this text in name and note
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.AccountListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: List accounts
      tags:
      - Accounts
    options:
      description: Returns an empty response with the HTTP Header "allow" set to the
        allowed HTTP verbs
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
      summary: Allowed HTTP verbs
      tags:
      - Accounts
    post:
      description: Creates a new account
      parameters:
      - description: Account
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/models.AccountCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controllers.AccountResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Create account
      tags:
      - Accounts
  /v1/accounts/{accountId}:
    delete:
      description: Deletes an account
      parameters:
      - description: ID formatted as string
        in: path
        name: accountId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Delete account
      tags:
      - Accounts
    get:
      description: Returns a specific account
      parameters:
      - description: ID formatted as string
        in: path
        name: accountId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.AccountResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Get account
      tags:
      - Accounts
    options:
      description: Returns an empty response with the HTTP Header "allow" set to the
        allowed HTTP verbs
      parameters:
      - description: ID formatted as string
        in: path
        name: accountId
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
      summary: Allowed HTTP verbs
      tags:
      - Accounts
    patch:
      description: Updates an account. Only values to be updated need to be specified.
      parameters:
      - description: ID formatted as string
        in: path
        name: accountId
        required: true
        type: string
      - description: Account
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/models.AccountCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.AccountResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Update account
      tags:
      - Accounts
  /v1/allocations:
    get:
      description: Returns a list of allocations
      parameters:
      - description: Filter by month
        in: query
        name: month
        type: string
      - description: Filter by amount
        in: query
        name: amount
        type: string
      - description: Filter by envelope ID
        in: query
        name: envelope
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.AllocationListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Get allocations
      tags:
      - Allocations
    options:
      description: Returns an empty response with the HTTP Header "allow" set to the
        allowed HTTP verbs
      responses:
        "204":
          description: No Content
      summary: Allowed HTTP verbs
      tags:
      - Allocations
    post:
      description: Create a new allocation of funds to an envelope for a specific
        month
      parameters:
      - description: Allocation
        in: body
        name: allocation
        required: true
        schema:
          $ref: '#/definitions/models.AllocationCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controllers.AllocationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Create allocations
      tags:
      - Allocations
  /v1/allocations/{allocationId}:
    delete:
      description: Deletes an allocation
      parameters:
      - description: ID formatted as string
        in: path
        name: allocationId
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Delete allocation
      tags:
      - Allocations
    get:
      description: Returns a specific allocation
      parameters:
      - description: ID formatted as string
        in: path
        name: allocationId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.AllocationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Get allocation
      tags:
      - Allocations
    options:
      description: Returns an empty response with the HTTP Header "allow" set to the
        allowed HTTP verbs
      parameters:
      - description: ID formatted as string
        in: path
        name: allocationId
        required: true
        type: string
      responses:
        "204":
          description: No Content
      summary: Allowed HTTP verbs
      tags:
      - Allocations
    patch:
      consumes:
      - application/json
      description: Update an allocation. Only values to be updated need to be specified.
      parameters:
      - description: ID formatted as string
        in: path
        name: allocationId
        required: true
        type: string
      - description: Allocation
        in: body
        name: allocation
        required: true
        schema:
          $ref: '#/definitions/models.AllocationCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.AllocationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Update allocation
      tags:
      - Allocations
  /v1/budgets:
    get:
      description: Returns a list of budgets
      parameters:
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by note
        in: query
        name: note
        type: string
      - description: Filter by currency
        in: query
        name: currency
        type: string
      - description: Search for this text in name and note
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.BudgetListResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: List budgets
      tags:
      - Budgets
    options:
      description: Returns an empty response with the HTTP Header "allow" set to the
        allowed HTTP verbs
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Allowed HTTP verbs
      tags:
      - Budgets
    post:
      consumes:
      - application/json
      description: Creates a new budget
      parameters:
      - description: Budget
        in: body
        name: budget
        required: true
        schema:
          $ref: '#/definitions/models.BudgetCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controllers.BudgetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Create budget
      tags:
      - Budgets
  /v1/budgets/{budgetId}:
    delete:
      description: Deletes a budget
      parameters:
      - description: ID formatted as string
        in: path
        name: budgetId
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Delete budget
      tags:
      - Budgets
    get:
      description: Returns a specific budget
      parameters:
      - description: ID formatted as string
        in: path
        name: budgetId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.BudgetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Get budget
      tags:
      - Budgets
    options:
      description: Returns an empty response with the HTTP Header "allow" set to the
        allowed HTTP verbs
      parameters:
      - description: ID formatted as string
        in: path
        name: budgetId
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Allowed HTTP verbs
      tags:
      - Budgets
    patch:
      consumes:
      - application/json
      description: Update an existing budget. Only values to be updated need to be
        specified.
      parameters:
      - description: ID formatted as string
        in: path
        name: budgetId
        required: true
        type: string
      - description: Budget
        in: body
        name: budget
        required: true
        schema:
          $ref: '#/definitions/models.BudgetCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.BudgetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Update budget
      tags:
      - Budgets
  /v1/budgets/{budgetId}/{month}:
    get:
      deprecated: true
      description: Returns data about a budget for a for a specific month. **Use GET
        /month endpoint with month and budgetId query parameters instead.**
      parameters:
      - description: ID formatted as string
        in: path
        name: budgetId
        required: true
        type: string
      - description: The month in YYYY-MM format
        in: path
        name: month
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.BudgetMonthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Get Budget month data
      tags:
      - Budgets
    options:
      deprecated: true
      description: Returns an empty response with the HTTP Header "allow" set to the
        allowed HTTP verbs. **Use OPTIONS /month endpoint with month and budgetId
        query parameters instead.**
      parameters:
      - description: ID formatted as string
        in: path
        name: budgetId
        required: true
        type: string
      - description: The month in YYYY-MM format
        in: path
        name: month
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Allowed HTTP verbs
      tags:
      - Budgets
  /v1/budgets/{budgetId}/{month}/allocations:
    delete:
      deprecated: true
      description: Deletes all allocation for the specified month. **Use DELETE /month
        endpoint with month and budgetId query parameters instead.**
      parameters:
      - description: The month in YYYY-MM format
        in: path
        name: month
        required: true
        type: string
      - description: Budget ID formatted as string
        in: path
        name: budgetId
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Delete allocations for a month
      tags:
      - Budgets
    options:
      deprecated: true
      description: Returns an empty response with the HTTP Header "allow" set to the
        allowed HTTP verbs. **Use OPTIONS /month endpoint with month and budgetId
        query parameters instead.**
      parameters:
      - description: ID formatted as string
        in: path
        name: budgetId
        required: true
        type: string
      - description: The month in YYYY-MM format
        in: path
        name: month
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Allowed HTTP verbs
      tags:
      - Budgets
    post:
      deprecated: true
      description: Sets allocations for a month for all envelopes that do not have
        an allocation yet. **Use POST /month endpoint with month and budgetId query
        parameters instead.**
      parameters:
      - description: The month in YYYY-MM format
        in: path
        name: month
        required: true
        type: string
      - description: Budget ID formatted as string
        in: path
        name: budgetId
        required: true
        type: string
      - description: Budget
        in: body
        name: mode
        required: true
        schema:
          $ref: '#/definitions/controllers.BudgetAllocationMode'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Set allocations for a month
      tags:
      - Budgets
  /v1/categories:
    get:
      description: Returns a list of categories
      parameters:
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by note
        in: query
        name: note
        type: string
      - description: Filter by budget ID
        in: query
        name: budget
        type: string
      - description: Is the category hidden?
        in: query
        name: hidden
        type: boolean
      - description: Search for this text in name and note
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.CategoryListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Get categories
      tags:
      - Categories
    options:
      description: Returns an empty response with the HTTP Header "allow" set to the
        allowed HTTP verbs
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
      summary: Allowed HTTP verbs
      tags:
      - Categories
    post:
      description: Creates a new category
      parameters:
      - description: Category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.CategoryCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controllers.CategoryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Create category
      tags:
      - Categories
  /v1/categories/{categoryId}:
    delete:
      description: Deletes a category
      parameters:
      - description: ID formatted as string
        in: path
        name: categoryId
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Delete category
      tags:
      - Categories
    get:
      description: Returns a specific category
      parameters:
      - description: ID formatted as string
        in: path
        name: categoryId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.CategoryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Get category
      tags:
      - Categories
    options:
      description: Returns an empty response with the HTTP Header "allow" set to the
        allowed HTTP verbs
      parameters:
      - description: ID formatted as string
        in: path
        name: categoryId
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
      summary: Allowed HTTP verbs
      tags:
      - Categories
    patch:
      consumes:
      - application/json
      description: Update an existing category. Only values to be updated need to
        be specified.
      parameters:
      - description: ID formatted as string
        in: path
        name: categoryId
        required: true
        type: string
      - description: Category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.CategoryCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.CategoryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Update category
      tags:
      - Categories
  /v1/envelopes:
    get:
      description: Returns a list of envelopes
      parameters:
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by note
        in: query
        name: note
        type: string
      - description: Filter by category ID
        in: query
        name: category
        type: string
      - description: Is the envelope hidden?
        in: query
        name: hidden
        type: boolean
      - description: Search for this text in name and note
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.EnvelopeListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Get envelopes
      tags:
      - Envelopes
    options:
      description: Returns an empty response with the HTTP Header "allow" set to the
        allowed HTTP verbs
      responses:
        "204":
          description: No Content
      summary: Allowed HTTP verbs
      tags:
      - Envelopes
    post:
      description: Creates a new envelope
      parameters:
      - description: Envelope
        in: body
        name: envelope
        required: true
        schema:
          $ref: '#/definitions/models.EnvelopeCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controllers.EnvelopeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Create envelope
      tags:
      - Envelopes
  /v1/envelopes/{envelopeId}:
    delete:
      description: Deletes an envelope
      parameters:
      - description: ID formatted as string
        in: path
        name: envelopeId
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Delete envelope
      tags:
      - Envelopes
    get:
      description: Returns a specific envelope
      parameters:
      - description: ID formatted as string
        in: path
        name: envelopeId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.EnvelopeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Get envelope
      tags:
      - Envelopes
    options:
      description: Returns an empty response with the HTTP Header "allow" set to the
        allowed HTTP verbs
      parameters:
      - description: ID formatted as string
        in: path
        name: envelopeId
        required: true
        type: string
      responses:
        "204":
          description: No Content
      summary: Allowed HTTP verbs
      tags:
      - Envelopes
    patch:
      consumes:
      - application/json
      description: Updates an existing envelope. Only values to be updated need to
        be specified.
      parameters:
      - description: ID formatted as string
        in: path
        name: envelopeId
        required: true
        type: string
      - description: Envelope
        in: body
        name: envelope
        required: true
        schema:
          $ref: '#/definitions/models.EnvelopeCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.EnvelopeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Update envelope
      tags:
      - Envelopes
  /v1/envelopes/{envelopeId}/{month}:
    get:
      deprecated: true
      description: Returns data about an envelope for a for a specific month. **Use
        GET /month endpoint with month and budgetId query parameters instead.**
      parameters:
      - description: ID formatted as string
        in: path
        name: envelopeId
        required: true
        type: string
      - description: The month in YYYY-MM format
        in: path
        name: month
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.EnvelopeMonthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Get Envelope month data
      tags:
      - Envelopes
  /v1/import:
    options:
      deprecated: true
      description: Returns an empty response with the HTTP Header "allow" set to the
        allowed HTTP verbs. **Please use /v1/import/ynab4, which works exactly the
        same.**
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Allowed HTTP verbs
      tags:
      - Import
    post:
      consumes:
      - multipart/form-data
      deprecated: true
      description: Imports budgets from YNAB 4. **Please use /v1/import/ynab4, which
        works exactly the same.**
      parameters:
      - description: File to import
        in: formData
        name: file
        required: true
        type: file
      - description: Name of the Budget to create
        in: query
        name: budgetName
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Import
      tags:
      - Import
  /v1/import/ynab-import-preview:
    options:
      description: Returns an empty response with the HTTP Header "allow" set to the
        allowed HTTP verbs
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Allowed HTTP verbs
      tags:
      - Import
    post:
      consumes:
      - multipart/form-data
      description: Returns a preview of transactions to be imported after parsing
        a YNAB Import format csv file
      parameters:
      - description: File to import
        in: formData
        name: file
        required: true
        type: file
      - description: ID of the account to import transactions for
        in: query
        name: accountId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.ImportPreviewList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Transaction Import Preview
      tags:
      - Import
  /v1/import/ynab4:
    options:
      description: Returns an empty response with the HTTP Header "allow" set to the
        allowed HTTP verbs
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Allowed HTTP verbs
      tags:
      - Import
    post:
      consumes:
      - multipart/form-data
      description: Imports budgets from YNAB 4
      parameters:
      - description: File to import
        in: formData
        name: file
        required: true
        type: file
      - description: Name of the Budget to create
        in: query
        name: budgetName
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controllers.BudgetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Import YNAB 4 budget
      tags:
      - Import
  /v1/month-configs:
    get:
      description: Returns a list of MonthConfigs
      parameters:
      - description: Filter by name
        in: query
        name: envelope
        type: string
      - description: Filter by month
        in: query
        name: month
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.MonthConfigListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: List MonthConfigs
      tags:
      - MonthConfigs
    options:
      description: Returns an empty response with the HTTP Header "allow" set to the
        allowed HTTP verbs.
      responses:
        "204":
          description: No Content
      summary: Allowed HTTP verbs
      tags:
      - MonthConfigs
  /v1/month-configs/{envelopeId}/{month}:
    delete:
      description: Deletes configuration settings for a specific month
      parameters:
      - description: ID of the Envelope
        in: path
        name: envelopeId
        required: true
        type: string
      - description: The month in YYYY-MM format
        in: path
        name: month
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Delete MonthConfig
      tags:
      - MonthConfigs
    get:
      description: Returns configuration for a specific month
      parameters:
      - description: ID of the Envelope
        in: path
        name: envelopeId
        required: true
        type: string
      - description: The month in YYYY-MM format
        in: path
        name: month
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.MonthConfigResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Get MonthConfig
      tags:
      - MonthConfigs
    options:
      description: Returns an empty response with the HTTP Header "allow" set to the
        allowed HTTP verbs
      parameters:
      - description: ID of the Envelope
        in: path
        name: envelopeId
        required: true
        type: string
      - description: The month in YYYY-MM format
        in: path
        name: month
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Allowed HTTP verbs
      tags:
      - MonthConfigs
    patch:
      description: Changes settings of an existing MonthConfig
      parameters:
      - description: ID of the Envelope
        in: path
        name: envelopeId
        required: true
        type: string
      - description: The month in YYYY-MM format
        in: path
        name: month
        required: true
        type: string
      - description: MonthConfig
        in: body
        name: monthConfig
        required: true
        schema:
          $ref: '#/definitions/models.MonthConfigCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controllers.MonthConfigResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Update MonthConfig
      tags:
      - MonthConfigs
    post:
      description: Creates a new MonthConfig
      parameters:
      - description: ID of the Envelope
        in: path
        name: envelopeId
        required: true
        type: string
      - description: The month in YYYY-MM format
        in: path
        name: month
        required: true
        type: string
      - description: MonthConfig
        in: body
        name: monthConfig
        required: true
        schema:
          $ref: '#/definitions/models.MonthConfigCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controllers.MonthConfigResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Create MonthConfig
      tags:
      - MonthConfigs
  /v1/months:
    delete:
      description: Deletes all allocation for the specified month
      parameters:
      - description: ID formatted as string
        in: query
        name: budget
        required: true
        type: string
      - description: The month in YYYY-MM format
        in: query
        name: month
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Delete allocations for a month
      tags:
      - Months
    get:
      description: Returns data about a specific month.
      parameters:
      - description: ID formatted as string
        in: query
        name: budget
        required: true
        type: string
      - description: The month in YYYY-MM format
        in: query
        name: month
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.MonthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Get data about a month
      tags:
      - Months
    options:
      description: Returns an empty response with the HTTP Header "allow" set to the
        allowed HTTP verbs.
      responses:
        "204":
          description: No Content
      summary: Allowed HTTP verbs
      tags:
      - Months
    post:
      description: Sets allocations for a month for all envelopes that do not have
        an allocation yet
      parameters:
      - description: ID formatted as string
        in: query
        name: budget
        required: true
        type: string
      - description: The month in YYYY-MM format
        in: query
        name: month
        required: true
        type: string
      - description: Budget
        in: body
        name: mode
        required: true
        schema:
          $ref: '#/definitions/controllers.BudgetAllocationMode'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Set allocations for a month
      tags:
      - Months
  /v1/transactions:
    get:
      description: Returns a list of transactions
      parameters:
      - description: Date of the transaction. Ignores exact time, matches on the day
          of the RFC3339 timestamp provided.
        in: query
        name: date
        type: string
      - description: Transactions at and after this date. Ignores exact time, matches
          on the day of the RFC3339 timestamp provided.
        in: query
        name: fromDate
        type: string
      - description: Transactions before and at this date. Ignores exact time, matches
          on the day of the RFC3339 timestamp provided.
        in: query
        name: untilDate
        type: string
      - description: Filter by amount
        in: query
        name: amount
        type: string
      - description: Amount less than or equal to this
        in: query
        name: amountLessOrEqual
        type: string
      - description: Amount more than or equal to this
        in: query
        name: amountMoreOrEqual
        type: string
      - description: Filter by note
        in: query
        name: note
        type: string
      - description: Filter by budget ID
        in: query
        name: budget
        type: string
      - description: Filter by ID of associated account, regardeless of source or
          destination
        in: query
        name: account
        type: string
      - description: Filter by source account ID
        in: query
        name: source
        type: string
      - description: Filter by destination account ID
        in: query
        name: destination
        type: string
      - description: Filter by envelope ID
        in: query
        name: envelope
        type: string
      - description: DEPRECATED. Filter by reconcilication state
        in: query
        name: reconciled
        type: boolean
      - description: Reconcilication state in source account
        in: query
        name: reconciledSource
        type: boolean
      - description: Reconcilication state in destination account
        in: query
        name: reconciledDestination
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.TransactionListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Get transactions
      tags:
      - Transactions
    options:
      description: Returns an empty response with the HTTP Header "allow" set to the
        allowed HTTP verbs
      responses:
        "204":
          description: No Content
      summary: Allowed HTTP verbs
      tags:
      - Transactions
    post:
      description: Creates a new transaction
      parameters:
      - description: Transaction
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/models.TransactionCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controllers.TransactionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Create transaction
      tags:
      - Transactions
  /v1/transactions/{transactionId}:
    delete:
      description: Deletes a transaction
      parameters:
      - description: ID formatted as string
        in: path
        name: transactionId
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Delete transaction
      tags:
      - Transactions
    get:
      description: Returns a specific transaction
      parameters:
      - description: ID formatted as string
        in: path
        name: transactionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.TransactionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Get transaction
      tags:
      - Transactions
    options:
      description: Returns an empty response with the HTTP Header "allow" set to the
        allowed HTTP verbs
      parameters:
      - description: ID formatted as string
        in: path
        name: transactionId
        required: true
        type: string
      responses:
        "204":
          description: No Content
      summary: Allowed HTTP verbs
      tags:
      - Transactions
    patch:
      consumes:
      - application/json
      description: Updates an existing transaction. Only values to be updated need
        to be specified.
      parameters:
      - description: ID formatted as string
        in: path
        name: transactionId
        required: true
        type: string
      - description: Transaction
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/models.TransactionCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.TransactionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.HTTPError'
      summary: Update transaction
      tags:
      - Transactions
  /version:
    get:
      description: Returns the software version of the API
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/router.VersionResponse'
      summary: API version
      tags:
      - General
    options:
      description: Returns an empty response with the HTTP Header "allow" set to the
        allowed HTTP verbs
      responses:
        "204":
          description: No Content
      summary: Allowed HTTP verbs
      tags:
      - General
swagger: "2.0"
