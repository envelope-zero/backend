name: test & tag

on:
  push:
    branches:
      - "**"
    tags-ignore:
      - "v*"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Set up go
        uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4.0.1
        with:
          # renovate: go-version
          go-version: 1.20.5

      - name: Run go tests
        run: |
          go test ./... -race -covermode=atomic -coverprofile=coverage.out

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3.1.4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.out

        # This builds the binary and starts it. If it does not exit within 3 seconds, consider it
        # successful
        #
        # With this, we prevent regressions like in 9c9e365c6ada93d94e90eae85704f14b8afaa4c9.
      - name: Verify binary works
        run: |
          make build
          API_URL=https://example.com/api timeout 3 ./backend || code=$?; if [[ $code -ne 124 && $code -ne 0 ]]; then exit $code; fi

  tag:
    runs-on: ubuntu-latest
    needs: test
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        with:
          fetch-depth: 0
          token: ${{ secrets.EZ_BOT_TOKEN }}

      - name: Install svu
        run: |
          # renovate: datasource=github-releases depName=caarlos0/svu
          export SVU_VERSION="v1.10.2"
          curl -Lo ./svu.tar.gz "https://github.com/caarlos0/svu/releases/download/${SVU_VERSION}/svu_${SVU_VERSION#v}_linux_amd64.tar.gz"
          tar -C "$HOME" -xzf svu.tar.gz
          rm svu.tar.gz

      - name: Tag new version
        run: |
          if [ $(git tag -l "$(~/svu next)") ]; then
            echo "Tag already exists, no release necessary"
          else
            echo "Tagging new version"
            git tag "$(~/svu next)"
            git push --tags
          fi
